{"version":3,"sources":["components/Header/index.js","components/Intro/index.js","components/Card/index.js","components/Row/index.js","components/Cards/index.js","components/Footer/index.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","this","props","message","score","topScore","Component","Intro","Card","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","state","image","clicked","handleHeaderChange","resetCards","updateCards","id","onClick","draggable","src","alt","Row","_this2","images","map","value","index","Card_Card","key","offset","setClicked","Cards","cards","numClicked","setState","shuffleCards","i","randPos","Math","floor","random","length","temp","clickPos","newCards","slice","newCount","newPos","Row_Row","App","headerMessage","Fragment","Header_Header","components_Intro","Cards_Cards","icons","Footer_Header","ReactDOM","render","App_App","document","getElementById"],"mappings":"+lEAGqBA,0LAEjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAIE,KAAKC,MAAMC,SACfN,EAAAC,EAAAC,cAAA,mBACUE,KAAKC,MAAME,MADrB,iBAC0CH,KAAKC,MAAMG,kBAPzBC,oBCWrBC,MAXf,WACE,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,wFCJeS,qBACnB,SAAAA,EAAYN,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAT,KAAAO,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAb,KAAMC,KACDa,YAAcN,EAAKM,YAAYC,KAAjBN,OAAAO,EAAA,EAAAP,CAAAD,IACnBA,EAAKS,MAAQ,GAHIT,6EAObR,KAAKC,MAAMiB,MAAMC,SACnBnB,KAAKC,MAAMmB,mBAAmB,4BAC9BpB,KAAKC,MAAMoB,eAEXrB,KAAKC,MAAMmB,mBAAmB,0BAC9BpB,KAAKC,MAAMqB,YAAYtB,KAAKC,MAAMsB,sCAKpC,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOyB,QAASxB,KAAKc,aAClClB,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,QAAQC,IAAK1B,KAAKC,MAAMiB,MAAMA,MAAOS,IAAI,aApB9BtB,cCCbuB,qBACnB,SAAAA,EAAY3B,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAT,KAAA4B,IACjBpB,EAAAC,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAAmB,GAAAf,KAAAb,KAAMC,KACDgB,MAAQ,GAFIT,wEAKV,IAAAqB,EAAA7B,KACP,OACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZC,KAAKC,MAAM6B,OAAOC,IAAI,SAACC,EAAOC,GAC7B,OACErC,EAAAC,EAAAC,cAACoC,EAAD,CACEC,IAAKF,EAAQJ,EAAK5B,MAAMmC,OACxBb,GAAIU,EAAQJ,EAAK5B,MAAMmC,OACvBlB,MAAOc,EACPZ,mBAAoBS,EAAK5B,MAAMmB,mBAC/BE,YAAaO,EAAK5B,MAAMqB,YACxBe,WAAYR,EAAK5B,MAAMoC,WACvBhB,WAAYQ,EAAK5B,MAAMoB,uBAlBJhB,cCAZiC,qBACnB,SAAAA,EAAYrC,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAT,KAAAsC,IACjB9B,EAAAC,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAA6B,GAAAzB,KAAAb,KAAMC,KACDqB,YAAcd,EAAKc,YAAYP,KAAjBN,OAAAO,EAAA,EAAAP,CAAAD,IACnBA,EAAKa,WAAab,EAAKa,WAAWN,KAAhBN,OAAAO,EAAA,EAAAP,CAAAD,IAClBA,EAAKS,MAAQ,CACXsB,MAAO/B,EAAKP,MAAMsC,MAClBC,WAAY,GANGhC,mFAWjBR,KAAKyC,SAAS,CAAEF,MAAOvC,KAAK0C,aAAa1C,KAAKiB,MAAMsB,8CAGzCA,GACX,IAAK,IAAII,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMC,EAAUL,EAAMI,GAAGxB,QACrB0B,KAAKC,MAAsB,GAAhBD,KAAKE,UAChBF,KAAKC,MAAMD,KAAKE,SAAWR,EAAMS,QAG/BC,EAAOV,EAAMI,GACnBJ,EAAMI,GAAKJ,EAAMK,GACjBL,EAAMK,GAAWK,EAEnB,OAAOV,sCAGGW,GAAU,IAAArB,EAAA7B,KACdmD,EAAWnD,KAAKiB,MAAMsB,MAAMa,QAClCD,EAASD,GAAU/B,SAAU,EAC7B,IAAMkC,EAAWrD,KAAKiB,MAAMuB,WAAa,EAEzCxC,KAAKyC,SAAS,CAAED,WAAYa,GAAY,WACtC,GAA8B,KAA1BxB,EAAKZ,MAAMuB,WAAf,CAOA,GAFAX,EAAKa,aAAaS,GAEdtB,EAAKZ,MAAMuB,YAAc,GAAI,CAG/B,IADA,IAAIc,EACKX,EAAI,GAAIA,EAAIQ,EAASH,OAAQL,IACpC,IAAKQ,EAASR,GAAGxB,QAAS,CACxBmC,EAASX,EACT,MAGJ,IAAMC,EAAUC,KAAKC,MAAsB,GAAhBD,KAAKE,UAG1BE,EAAOE,EAASP,GACtBO,EAASP,GAAWO,EAASG,GAC7BH,EAASG,GAAUL,EAGrBpB,EAAKY,SAAS,CAAEF,MAAOY,4CAMzB,IADA,IAAMA,EAAWnD,KAAKiB,MAAMsB,MACnBI,EAAI,EAAGA,EAAIQ,EAASH,OAAQL,IACnCQ,EAASR,GAAGxB,SAAU,EAExBnB,KAAK0C,aAAaS,GAClBnD,KAAKyC,SAAS,CAAEF,MAAOY,EAAUX,WAAY,qCAI7C,OACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwB,GAAG,SAClC3B,EAAAC,EAAAC,cAACyD,EAAD,CACEnB,OAAQ,EACRN,OAAQ9B,KAAKiB,MAAMsB,MAAMa,MAAM,EAAG,GAClChC,mBAAoBpB,KAAKC,MAAMmB,mBAC/BE,YAAatB,KAAKsB,YAClBe,WAAYrC,KAAKqC,WACjBhB,WAAYrB,KAAKqB,aAEnBzB,EAAAC,EAAAC,cAACyD,EAAD,CACEnB,OAAQ,EACRN,OAAQ9B,KAAKiB,MAAMsB,MAAMa,MAAM,EAAG,GAClChC,mBAAoBpB,KAAKC,MAAMmB,mBAC/BE,YAAatB,KAAKsB,YAClBe,WAAYrC,KAAKqC,WACjBhB,WAAYrB,KAAKqB,aAEnBzB,EAAAC,EAAAC,cAACyD,EAAD,CACEnB,OAAQ,EACRN,OAAQ9B,KAAKiB,MAAMsB,MAAMa,MAAM,EAAG,IAClChC,mBAAoBpB,KAAKC,MAAMmB,mBAC/BE,YAAatB,KAAKsB,YAClBe,WAAYrC,KAAKqC,WACjBhB,WAAYrB,KAAKqB,aAEnBzB,EAAAC,EAAAC,cAACyD,EAAD,CACEnB,OAAQ,GACRN,OAAQ9B,KAAKiB,MAAMsB,MAAMa,MAAM,GAAI,IACnChC,mBAAoBpB,KAAKC,MAAMmB,mBAC/BE,YAAatB,KAAKsB,YAClBe,WAAYrC,KAAKqC,WACjBhB,WAAYrB,KAAKqB,qBAzGQhB,cCDdV,0LAEjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,8BAJ4BO,qBCIfmD,cACnB,SAAAA,EAAYvD,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAT,KAAAwD,IACjBhD,EAAAC,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAA+C,GAAA3C,KAAAb,KAAMC,KACDmB,mBAAqBZ,EAAKY,mBAAmBL,KAAxBN,OAAAO,EAAA,EAAAP,CAAAD,IAC1BA,EAAKS,MAAQ,CACXwC,cAAe,2BACftD,MAAO,EACPC,SAAU,GANKI,kFAUAiD,GACjBzD,KAAKyC,SAAS,CAAEgB,kBACM,6BAAlBA,EACFzD,KAAKyC,SAAS,CAAEtC,MAAO,IAEvBH,KAAKyC,SAAS,SAAAxB,GAAK,MAAK,CACtBd,MAAOc,EAAMd,MAAQ,EACrBC,SACEa,EAAMd,MAAQ,EAAIc,EAAMb,SAAWa,EAAMd,MAAQ,EAAIc,EAAMb,6CAMjE,OACER,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6D,SAAA,KACE9D,EAAAC,EAAAC,cAAC6D,EAAD,CACEzD,QAASF,KAAKiB,MAAMwC,cACpBtD,MAAOH,KAAKiB,MAAMd,MAClBC,SAAUJ,KAAKiB,MAAMb,WAEvBR,EAAAC,EAAAC,cAAC8D,EAAD,MACAhE,EAAAC,EAAAC,cAAC+D,EAAD,CAAOtB,MAAOuB,EAAO1C,mBAAoBpB,KAAKoB,qBAC9CxB,EAAAC,EAAAC,cAACiE,EAAD,cAlCyB1D,aCFjC2D,IAASC,OAAOrE,EAAAC,EAAAC,cAACoE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4328abe0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./header.css\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header-container\">\r\n        <p>Clicky Game</p>\r\n        <p>{this.props.message}</p>\r\n        <p>\r\n          Score: {this.props.score} | Top Score: {this.props.topScore}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";    \r\nimport \"./intro.css\";\r\n\r\nfunction Intro() {\r\n  return (\r\n    <div className=\"intro-container\">\r\n      <h1>Clicky Game!</h1>\r\n      <h3>\r\n        Click on an image to earn points, but don't click on any more than once!\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","import React, { Component } from \"react\";\r\nimport \"./card.css\";\r\n\r\nexport default class Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = {};\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.props.image.clicked) {\r\n      this.props.handleHeaderChange(\"You guessed incorrectly!\")\r\n      this.props.resetCards();\r\n    } else {\r\n      this.props.handleHeaderChange(\"You guessed correctly!\");\r\n      this.props.updateCards(this.props.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\" onClick={this.handleClick}>\r\n        <img draggable=\"false\" src={this.props.image.image} alt=\"\" />\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Card from \"../Card\";\r\nimport \"./row.css\";\r\n\r\nexport default class Row extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        {this.props.images.map((value, index) => {\r\n          return (\r\n            <Card\r\n              key={index + this.props.offset}\r\n              id={index + this.props.offset}\r\n              image={value}\r\n              handleHeaderChange={this.props.handleHeaderChange}\r\n              updateCards={this.props.updateCards}\r\n              setClicked={this.props.setClicked}\r\n              resetCards={this.props.resetCards}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Row from \"../Row\";\r\nimport \"./cards.css\";\r\n\r\nexport default class Cards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateCards = this.updateCards.bind(this);\r\n    this.resetCards = this.resetCards.bind(this);\r\n    this.state = {\r\n      cards: this.props.cards,\r\n      numClicked: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ cards: this.shuffleCards(this.state.cards) });\r\n  }\r\n\r\n  shuffleCards(cards) {\r\n    for (let i = 0; i < 16; i++) {\r\n      const randPos = cards[i].clicked\r\n        ? Math.floor(Math.random() * 16)\r\n        : Math.floor(Math.random() * cards.length); // ensures clicked cards stay visible\r\n\r\n      // swap\r\n      const temp = cards[i];\r\n      cards[i] = cards[randPos];\r\n      cards[randPos] = temp;\r\n    }\r\n    return cards;\r\n  }\r\n\r\n  updateCards(clickPos) {\r\n    const newCards = this.state.cards.slice();\r\n    newCards[clickPos].clicked = true;\r\n    const newCount = this.state.numClicked + 1;\r\n\r\n    this.setState({ numClicked: newCount }, () => {\r\n      if (this.state.numClicked === 21) {\r\n        // tell user they won\r\n        return;\r\n      }\r\n\r\n      this.shuffleCards(newCards);\r\n\r\n      if (this.state.numClicked >= 16) {\r\n        // fetch new unclicked card\r\n        let newPos;\r\n        for (let i = 16; i < newCards.length; i++) {\r\n          if (!newCards[i].clicked) {\r\n            newPos = i;\r\n            break;\r\n          }\r\n        }\r\n        const randPos = Math.floor(Math.random() * 16);\r\n\r\n        // swap\r\n        const temp = newCards[randPos];\r\n        newCards[randPos] = newCards[newPos];\r\n        newCards[newPos] = temp;\r\n      }\r\n\r\n      this.setState({ cards: newCards });\r\n    });\r\n  }\r\n\r\n  resetCards() {\r\n    const newCards = this.state.cards;\r\n    for (let i = 0; i < newCards.length; i++) {\r\n      newCards[i].clicked = false;\r\n    }\r\n    this.shuffleCards(newCards);\r\n    this.setState({ cards: newCards, numClicked: 0 });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"cards-container\" id=\"cards\">\r\n        <Row\r\n          offset={0}\r\n          images={this.state.cards.slice(0, 4)}\r\n          handleHeaderChange={this.props.handleHeaderChange}\r\n          updateCards={this.updateCards}\r\n          setClicked={this.setClicked}\r\n          resetCards={this.resetCards}\r\n        />\r\n        <Row\r\n          offset={4}\r\n          images={this.state.cards.slice(4, 8)}\r\n          handleHeaderChange={this.props.handleHeaderChange}\r\n          updateCards={this.updateCards}\r\n          setClicked={this.setClicked}\r\n          resetCards={this.resetCards}\r\n        />\r\n        <Row\r\n          offset={8}\r\n          images={this.state.cards.slice(8, 12)}\r\n          handleHeaderChange={this.props.handleHeaderChange}\r\n          updateCards={this.updateCards}\r\n          setClicked={this.setClicked}\r\n          resetCards={this.resetCards}\r\n        />\r\n        <Row\r\n          offset={12}\r\n          images={this.state.cards.slice(12, 16)}\r\n          handleHeaderChange={this.props.handleHeaderChange}\r\n          updateCards={this.updateCards}\r\n          setClicked={this.setClicked}\r\n          resetCards={this.resetCards}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.css\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer-container\">\r\n        <p>&copy; 2019</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Intro from \"./components/Intro\";\nimport Cards from \"./components/Cards\";\nimport Footer from \"./components/Footer\";\nimport icons from \"./icons.json\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleHeaderChange = this.handleHeaderChange.bind(this);\n    this.state = {\n      headerMessage: \"Click an image to begin!\",\n      score: 0,\n      topScore: 0\n    };\n  }\n\n  handleHeaderChange(headerMessage) {\n    this.setState({ headerMessage });\n    if (headerMessage === \"You guessed incorrectly!\") {\n      this.setState({ score: 0 });\n    } else {\n      this.setState(state => ({\n        score: state.score + 1,\n        topScore:\n          state.score + 1 > state.topScore ? state.score + 1 : state.topScore\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header\n          message={this.state.headerMessage}\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n        <Intro />\n        <Cards cards={icons} handleHeaderChange={this.handleHeaderChange} />\n        <Footer />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}